@{
    Html.EnableClientValidation(true);
}
@model  MHS_FINAL_PROJECT.Models.ManageAccountViewModel
<div class="modal fade" id="SetPassworModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title main-title-modal set_by_admin" id="exampleModalLongTitle">Set your password</h5>
                <div class="modal_line"></div>
            </div>
            @if (ViewBag.StatusMessage == "Something Went Wrong while setting the password" || ViewBag.StatusMessage == "Passwords must have at least one uppercase (A-Z)."
                || ViewBag.StatusMessage == "Passwords must have at least one Special character")
            {
                <div class="alert alert-danger alert-danger-password alert-danger-Set-password" role="alert">
                    @ViewBag.StatusMessage
                </div>
            }
            @using (Html.BeginForm("SetPassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.HiddenFor(m => m.SetPassword.id, new { @class = "SetPasswordId" })
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="modal-body">
                    <div class="inpu_modal">
                        @Html.LabelFor(m => m.SetPassword.NewPassword, new { @class = "sub-title alighn" })
                        @Html.PasswordFor(m => m.SetPassword.NewPassword, new { @class = "NewPassword" })
                        @Html.ValidationMessageFor(m => m.SetPassword.NewPassword, "", new { @class = "text-danger" })

                    </div>
                    <div class="inpu_modal">
                        @Html.LabelFor(m => m.SetPassword.ConfirmPassword, new { @class = "sub-title alighn" })
                        @Html.PasswordFor(m => m.SetPassword.ConfirmPassword, new { @class = "ConfirmPassword" })
                        @Html.ValidationMessageFor(m => m.SetPassword.ConfirmPassword, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn_save">Save</button>
                    <button type="button" class="btn_close" data-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/Scripts/jquery.validate.min.js")
@Scripts.Render("~/Scripts/jquery.validate.unobtrusive.min.js")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/jqueryval")